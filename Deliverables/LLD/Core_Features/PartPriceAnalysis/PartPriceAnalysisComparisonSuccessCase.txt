title Part Price Analysis Comparison Success Diagram


Front End->Part Price Analysis Application Layer:CompareParts(ComparisonModel comparisonModel) : ComparisonObject
activate Front End
activate Part Price Analysis Application Layer

Part Price Analysis Application Layer -> Part Price Analysis Business Layer: <<Constructor>> PartPriceAnalysisManager(PartPriceAnalysisService service) : 
activate Part Price Analysis Business Layer
Part Price Analysis Business Layer -->Part Price Analysis Application Layer: Activated Business Layer

Part Price Analysis Application Layer ->Part Price Analysis Business Layer: CompareParts(PartTypeEntity partType, ComparisonObject comparisonObject) : PartPriceAnalysisService.CompareVehicleParts(ComparisonPartModel)

Part Price Analysis Business Layer -> Part Price Analysis Service Layer: <<Constructor>> PartPriceAnalysisService(PartPriceAnalysisDataAccess partPriceAnalyisisDAO)

activate Part Price Analysis Service Layer

Part Price Analysis Service Layer -->Part Price Analysis Business Layer: Activated Part Price Analysis Service 


Part Price Analysis Business Layer ->Part Price Analysis Service Layer: CompareVehicleParts(ComparisonPartModel): partPriceAnalysisDAO.RetrieveTwoVehicleParts(ComparisonPartModel comparisonPartModel) 

Part Price Analysis Service Layer -> Part Price Analysis Data Access Layer: <<Constructor>> PartPriceAnalysisDataAccess()

activate Part Price Analysis Data Access Layer
Part Price Analysis Data Access Layer -->Part Price Analysis Service Layer : Activated Part Price Analysis Service 

Part Price Analysis Service Layer ->Part Price Analysis Data Access Layer : RetrieveTwoVehicleParts(ComparisonPartModel comparisonPartModel)

database VehicleParts

Part Price Analysis Data Access Layer ->VehicleParts: command.ExecuteReader() //Read fucntionality Calling on Our String Query to DB

activate VehicleParts
VehicleParts ->VehicleParts: SELECT * FROM VehicleParts WHERE PARTID = PART_ONE_ID AND PARTID = PART_TWO_ID;


VehicleParts -->Part Price Analysis Data Access Layer: Return Vehicle Part Information
deactivate VehicleParts

Part Price Analysis Data Access Layer-->Part Price Analysis Service Layer: Return ISet<VehiclePartInformation>
deactivate Part Price Analysis Data Access Layer

Part Price Analysis Service Layer->Part Price Analysis Service Layer: FormulatePlotInformation(ISet<VehiclePartInformation> vehicleInformation)

Part Price Analysis Service Layer-->Part Price Analysis Business Layer:Return vehicleInformation

deactivate Part Price Analysis Service Layer

Part Price Analysis Business Layer-->Part Price Analysis Application Layer: Return vehicleInformation

deactivate Part Price Analysis Business Layer
Part Price Analysis Application Layer-->Front End: Return VehicleInformation

Front End->Front End: Display Comparison

Part Price Analysis Application Layer -> Log Service Layer: <<Constructor>> LoggingService(LoggingDataAccess LogDAO) 
activate Log Service Layer

Log Service Layer -->Part Price Analysis Application Layer: Activated Logging Services

Part Price Analysis Application Layer->Log Service Layer: LogCurrentEvent(LoggingModel loggingModel) : bool

Log Service Layer -> Log Data Access Layer: CreateNewLogEvent(LoggingModel loggingModel) : bool
activate Log Data Access Layer

database Log Database
Log Data Access Layer ->Log Database: command.ExecuteReader() //Write Functionality Calling on Our String Query to DB
activate Log Database

Log Database ->Log Database: INSERT INTO LOG(categoryName, levelName, userHash, DSCRIPTION) VALUES X,X,X,X;

Log Database -->Log Data Access Layer: Return True <<Validation of Execution>>
deactivate Log Database

Log Data Access Layer -->Log Service Layer: Return True
deactivate Log Data Access Layer

Log Service Layer-->Part Price Analysis Application Layer: Return True
